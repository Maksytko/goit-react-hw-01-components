{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/Friend-list-item/Friend-list-item.module.css","components/Transaction-history/Transaction-history.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/Friend-list-item/Friend-list-item.jsx","components/Friend-list/Friend-list.jsx","components/Transaction-history/Transaction-history.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","style","profile","src","alt","item","followers","views","likes","Statistics","title","list","map","stat","label","percentage","id","FriendListItem","isOnline","status","color","width","FriendList","friends","friend","TransactionHistory","items","table","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5933f54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1o2RN\",\"stats\":\"Profile_stats__2AIeC\",\"item\":\"Profile_item__33WgK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__iy3Kn\",\"item\":\"Statistics_item__1Tkm5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friend-list-item_item__2ZxzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Transaction-history_table__Og96c\"};","import style from \"./Profile.module.css\";\r\nimport propTypes from \"prop-types\";\r\n\r\nfunction Profile({ name, tag, location, avatar, stats }) {\r\n  return (\r\n    <div className={style.profile}>\r\n      <div className=\"description\">\r\n        <img src={avatar} alt=\"Аватар пользователя\" className=\"avatar\" />\r\n        <p className=\"name\">{name}</p>\r\n        <p className=\"tag\">@{tag}</p>\r\n        <p className=\"location\">{location}</p>\r\n      </div>\r\n\r\n      <ul className={style.stats}>\r\n        <li className={style.item}>\r\n          <span className=\"label\">Followers</span>\r\n          <span className=\"quantity\">{stats.followers}</span>\r\n        </li>\r\n        <li className={style.item}>\r\n          <span className=\"label\">Views</span>\r\n          <span className=\"quantity\">{stats.views}</span>\r\n        </li>\r\n        <li className={style.item}>\r\n          <span className=\"label\">Likes</span>\r\n          <span className=\"quantity\">{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nProfile.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  tag: propTypes.string.isRequired,\r\n  location: propTypes.string.isRequired,\r\n  avatar: propTypes.string.isRequired,\r\n  stats: propTypes.shape({\r\n    followers: propTypes.number,\r\n    views: propTypes.number,\r\n    likes: propTypes.number,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Profile;\r\n","import style from \"./Statistics.module.css\";\r\nimport propTypes from \"prop-types\";\r\n\r\nfunction Statistics({ title, stats }) {\r\n  return (\r\n    <section className=\"statistics\">\r\n      {title && <h2 className=\"title\">{title}</h2>}\r\n      <ul className={style.list}>\r\n        {stats.map((stat) => {\r\n          return (\r\n            <li className={style.item} key={stat.id}>\r\n              <span className=\"label\">{stat.label}</span>\r\n              <span className=\"percentage\">{stat.percentage}</span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </section>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  title: propTypes.string,\r\n  stats: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string,\r\n      label: propTypes.string,\r\n      percentage: propTypes.number,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import style from \"./Friend-list-item.module.css\";\r\n\r\nfunction FriendListItem({ avatar, name, isOnline }) {\r\n  return (\r\n    <li className={style.item}>\r\n      <span\r\n        className={style.status}\r\n        style={{ color: isOnline ? \"green\" : \"red\" }}\r\n      >\r\n        {isOnline ? \"Online\" : \"Offline\"}\r\n      </span>\r\n      <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\r\n      <p className=\"name\">{name}</p>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default FriendListItem;\r\n","import propTypes from \"prop-types\";\r\nimport FriendListItem from \"../Friend-list-item/Friend-list-item\";\r\n\r\nfunction FriendList({ friends }) {\r\n  return (\r\n    <ul>\r\n      {friends.map((friend) => {\r\n        return (\r\n          <FriendListItem\r\n            avatar={friend.avatar}\r\n            name={friend.name}\r\n            isOnline={friend.isOnline}\r\n            key={friend.id}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nFriendList.propTypes = {\r\n  friends: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      avatar: propTypes.string,\r\n      name: propTypes.string,\r\n      isOnline: propTypes.bool,\r\n      id: propTypes.number,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import style from \"./Transaction-history.module.css\";\r\nimport propTypes from \"prop-types\";\r\n\r\nfunction TransactionHistory({ items }) {\r\n  return (\r\n    <table className={style.table}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => {\r\n          return (\r\n            <tr key={item.id}>\r\n              <td className={style.table}>{item.type}</td>\r\n              <td>{item.amount}</td>\r\n              <td>{item.currency}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: propTypes.arrayOf(\r\n    propTypes.shape({\r\n      id: propTypes.string,\r\n      type: propTypes.string,\r\n      amount: propTypes.string,\r\n      currency: propTypes.string,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import \"./App.css\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FriendList from \"./components/Friend-list/Friend-list\";\nimport TransactionHistory from \"./components/Transaction-history/Transaction-history\";\n\nimport user from \"./user.json\";\nimport statisticalData from \"./statistical-data.json\";\nimport friends from \"./friends.json\";\nimport transactions from \"./transactions.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n\n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}